<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code on Let&#39;s see what happens.</title>
    <link>https://sowcow.github.io/blog/tags/code/</link>
    <description>Recent content in code on Let&#39;s see what happens.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 20 Jun 2019 08:09:06 +0500</lastBuildDate>
    
	<atom:link href="https://sowcow.github.io/blog/tags/code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Intellectual Toys</title>
      <link>https://sowcow.github.io/blog/posts/intellectual-toys/</link>
      <pubDate>Thu, 20 Jun 2019 08:09:06 +0500</pubDate>
      
      <guid>https://sowcow.github.io/blog/posts/intellectual-toys/</guid>
      <description>I want to write an argument that there is a kind of people who like intellectual toys in certain area.
Earlier they found theology to be interesting.
Later such people were playing with philosophies, ideologies like communism.
And now such people may be writing code.
So people who are into religious fundamentalism or communism should definetly try coding.
Unfortunately in code you cannot use verbal tricks or force. But the good part is that you are not subject to the constrains of the real world either.</description>
    </item>
    
    <item>
      <title>Unconstrained Code</title>
      <link>https://sowcow.github.io/blog/posts/unconstrained-code/</link>
      <pubDate>Fri, 07 Jun 2019 09:05:18 +0500</pubDate>
      
      <guid>https://sowcow.github.io/blog/posts/unconstrained-code/</guid>
      <description>I was looking at what I am doing wrong with my personal projects recently. And I think that part of the problem is this unconstrained approach.
So there is the propensity in people to be blindly optimistic about something. I found mine to be interfering with the code.
So I gotta learn some good constraints.
I&amp;rsquo;ll try some very directed and formal approach with explicit principles and compromises.</description>
    </item>
    
    <item>
      <title>Complexity Order</title>
      <link>https://sowcow.github.io/blog/posts/complexity-order/</link>
      <pubDate>Fri, 24 May 2019 09:47:54 +0500</pubDate>
      
      <guid>https://sowcow.github.io/blog/posts/complexity-order/</guid>
      <description>The title may be ambiguous/misleading. And chances are the idea is old.
The idea is that you add complexity in the right order. I think this is the real idea behind KISS/YAGNI/etc..
For me the right/wrong here is intuitive. I need to return to it later.</description>
    </item>
    
  </channel>
</rss>